"""
1: Создайте функцию, принимающую на вход имя, возраст и город проживания человека. 
Функция должна возвращать строку вида «Василий, 21 год(а), проживает в городе Москва»
"""
def getTextPerson(name, age, city):
    return f'{name}, {age} года(а), проживает в городе {city}' 

print(getTextPerson('Максим', 32, 'Қызылорда'))


"""
2: Создайте функцию, принимающую на вход 3 числа и возвращающую наибольшее из них.
"""
# если числа последовательностью, то вообще непонятно зачем, просто max(a)
# будем считать, что отдельные
def maxOf3(a1, a2, a3):
    return max(a1,a2,a3)

print(maxOf3(12,43,7))    

# а с любым числом ещё проще, так как последовательность нам формировать не надо
def maxOf(*num):
    return max(num)

print(maxOf(1,4,65,78,3,21,56))

"""
3: Давайте опишем пару сущностей player и enemy через словарь, который будет иметь ключи и значения:
name - строка полученная от пользователя,
health = 100,
damage = 50. 
### Поэкспериментируйте с значениями урона и жизней по желанию. 
### Теперь надо создать функцию attack(person1, person2). Примечание: имена аргументов можете указать свои. 
### Функция в качестве аргумента будет принимать атакующего и атакуемого. 
### В теле функция должна получить параметр damage атакующего и отнять это количество от health атакуемого. 
    Функция должна сама работать со словарями и изменять их значения.
"""
player = {
    'name': '',
    'health': 100,
    'damage': 50
}
enemy = {
    'name': '',
    'health': 100,
    'damage': 50
}
player['name'] = input('Введите имя игрока: ')
enemy['name'] = input('Введите имя вражины: ')

def printHealth(person):
    print('{} теперь имеет здоровье {}'.format(person['name'], person['health']))
#    print(f'{person['name']} теперь имеет здоровье {person['health']}')
# ? Непонятный глюк. Закомментированная строка выше дает ошибку


def attack(attacker, attacked):
    attacked['health'] -= attacker['damage']

printHealth(enemy)
print('Бац! Хрясь!')
attack(player, enemy)
printHealth(enemy)

"""
4: Давайте усложним предыдущее задание. Измените сущности, добавив новый параметр - armor = 1.2 (величина брони персонажа)
Теперь надо добавить новую функцию, которая будет вычислять и возвращать полученный урон по формуле damage / armor
Следовательно, у вас должно быть 2 функции:
Наносит урон. Это улучшенная версия функции из задачи 3.
Вычисляет урон по отношению к броне.

Примечание. Функция номер 2 используется внутри функции номер 1 для вычисления урона и вычитания его из здоровья персонажа. 
"""
player['armor'] = 1.7
enemy['armor'] = 1.2

def realDamage(damage, armor):
    return damage / armor

def attack_new(attacker, attacked):
    attacked['health'] -= realDamage(attacker['damage'], attacked['armor']) 

print('Бум! Дзынь!')
attack_new(player, enemy)
printHealth(enemy)
